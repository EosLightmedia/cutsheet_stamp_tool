{"ast":null,"code":"var _jsxFileName = \"/Users/stevengraves/EosDev/EosApps/stamper-new-frontend/src/Components/BoxFolderSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoxFolderSelector({\n  setBoxFolderNumber\n}) {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [helperText, setHelperText] = useState(\"Enter a URL in the format: https://example.com/folders/[folder-number]\");\n  const validateAndExtractFolderNumber = inputUrl => {\n    // Regex to match the expected URL format and capture the folder number\n    const match = inputUrl.match(/https:\\/\\/example\\.com\\/folders\\/(\\d+)/);\n    if (match) {\n      setBoxFolderNumber(match[1]); // match[1] contains the captured folder number\n      setHelperText(\"Enter a URL in the format: https://example.com/folders/[folder-number]\");\n    } else {\n      setHelperText(\"Whoops, something about that link doesn’t look right.\");\n    }\n  };\n  const handleChange = event => {\n    const inputUrl = event.target.value;\n    setUrl(inputUrl);\n    validateAndExtractFolderNumber(inputUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"box-folder-url\",\n      children: \"Box Folder URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"box-folder-url\",\n      value: url,\n      onChange: handleChange,\n      placeholder: \"https://box.com/folders/12345\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(BoxFolderSelector, \"mQu6Fc90ijDJ9Ok/OlhVvk3y1BY=\");\n_c = BoxFolderSelector;\nexport default BoxFolderSelector;\nvar _c;\n$RefreshReg$(_c, \"BoxFolderSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BoxFolderSelector","setBoxFolderNumber","_s","url","setUrl","helperText","setHelperText","validateAndExtractFolderNumber","inputUrl","match","handleChange","event","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/stevengraves/EosDev/EosApps/stamper-new-frontend/src/Components/BoxFolderSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction BoxFolderSelector({ setBoxFolderNumber }) {\n  const [url, setUrl] = useState(\"\");\n  const [helperText, setHelperText] = useState(\n    \"Enter a URL in the format: https://example.com/folders/[folder-number]\"\n  );\n\n  const validateAndExtractFolderNumber = (inputUrl) => {\n    // Regex to match the expected URL format and capture the folder number\n    const match = inputUrl.match(/https:\\/\\/example\\.com\\/folders\\/(\\d+)/);\n    if (match) {\n      setBoxFolderNumber(match[1]); // match[1] contains the captured folder number\n      setHelperText(\n        \"Enter a URL in the format: https://example.com/folders/[folder-number]\"\n      );\n    } else {\n      setHelperText(\"Whoops, something about that link doesn’t look right.\");\n    }\n  };\n\n  const handleChange = (event) => {\n    const inputUrl = event.target.value;\n    setUrl(inputUrl);\n    validateAndExtractFolderNumber(inputUrl);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"box-folder-url\">Box Folder URL:</label>\n      <input\n        type=\"text\"\n        id=\"box-folder-url\"\n        value={url}\n        onChange={handleChange}\n        placeholder=\"https://box.com/folders/12345\"\n      />\n      <p>{helperText}</p>\n    </div>\n  );\n}\n\nexport default BoxFolderSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,iBAAiBA,CAAC;EAAEC;AAAmB,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAC1C,wEACF,CAAC;EAED,MAAMU,8BAA8B,GAAIC,QAAQ,IAAK;IACnD;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAACC,KAAK,CAAC,wCAAwC,CAAC;IACtE,IAAIA,KAAK,EAAE;MACTR,kBAAkB,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9BH,aAAa,CACX,wEACF,CAAC;IACH,CAAC,MAAM;MACLA,aAAa,CAAC,uDAAuD,CAAC;IACxE;EACF,CAAC;EAED,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMH,QAAQ,GAAGG,KAAK,CAACC,MAAM,CAACC,KAAK;IACnCT,MAAM,CAACI,QAAQ,CAAC;IAChBD,8BAA8B,CAACC,QAAQ,CAAC;EAC1C,CAAC;EAED,oBACET,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAOgB,OAAO,EAAC,gBAAgB;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvDpB,OAAA;MACEqB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,gBAAgB;MACnBR,KAAK,EAAEV,GAAI;MACXmB,QAAQ,EAAEZ,YAAa;MACvBa,WAAW,EAAC;IAA+B;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC,eACFpB,OAAA;MAAAe,QAAA,EAAIT;IAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACjB,EAAA,CAtCQF,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAwC1B,eAAeA,iBAAiB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}