{"ast":null,"code":"var _jsxFileName = \"/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool/frontend-dev/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MainController from \"./Components/MainController\";\nimport LoadingImage from \"./Assets/loading-spinner.gif\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authCode, setAuthCode] = useState(\"\");\n  const [refreshToken, setRefreshToken] = useState(\"\");\n  useEffect(() => {\n    const checkCookie = (cookieName, setStateFunction, stateValue) => {\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${cookieName}=`);\n      if (parts.length === 2) {\n        const code = parts.pop().split(\";\").shift();\n        if (code !== stateValue) {\n          setStateFunction(code);\n          return true; // Indicates the cookie was found\n        }\n      }\n      return false; // Indicates the cookie was not found\n    };\n    const intervalAccess = setInterval(() => {\n      if (checkCookie(\"access\", setAuthCode, authCode)) {\n        clearInterval(intervalAccess);\n        console.log(\"Access Token Set:\", authCode);\n      }\n    }, 1000);\n    const intervalRefresh = setInterval(() => {\n      if (checkCookie(\"refresh\", setRefreshToken, refreshToken)) {\n        clearInterval(intervalRefresh);\n        console.log(\"Refresh Token Set:\", refreshToken);\n      }\n    }, 1000);\n    return () => {\n      clearInterval(intervalAccess);\n      clearInterval(intervalRefresh);\n    };\n  }, [authCode, refreshToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: authCode && refreshToken ? /*#__PURE__*/_jsxDEV(MainController, {\n      authCode: authCode,\n      refreshToken: refreshToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-container-app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container-app\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"loading-spinner\",\n          src: LoadingImage,\n          alt: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Verifying Box Credentials...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3nglYIXd4szjBEGpkjVTJn+pyPU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MainController","LoadingImage","jsxDEV","_jsxDEV","App","_s","authCode","setAuthCode","refreshToken","setRefreshToken","checkCookie","cookieName","setStateFunction","stateValue","value","document","cookie","parts","split","length","code","pop","shift","intervalAccess","setInterval","clearInterval","console","log","intervalRefresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool/frontend-dev/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport MainController from \"./Components/MainController\"\nimport LoadingImage from \"./Assets/loading-spinner.gif\"\nimport \"./App.css\"\n\nfunction App() {\n  const [authCode, setAuthCode] = useState(\"\")\n  const [refreshToken, setRefreshToken] = useState(\"\")\n\n  useEffect(() => {\n    const checkCookie = (cookieName, setStateFunction, stateValue) => {\n      const value = `; ${document.cookie}`\n      const parts = value.split(`; ${cookieName}=`)\n      if (parts.length === 2) {\n        const code = parts.pop().split(\";\").shift()\n        if (code !== stateValue) {\n          setStateFunction(code)\n          return true // Indicates the cookie was found\n        }\n      }\n      return false // Indicates the cookie was not found\n    }\n\n    const intervalAccess = setInterval(() => {\n      if (checkCookie(\"access\", setAuthCode, authCode)) {\n        clearInterval(intervalAccess)\n        console.log(\"Access Token Set:\", authCode)\n      }\n    }, 1000)\n\n    const intervalRefresh = setInterval(() => {\n      if (checkCookie(\"refresh\", setRefreshToken, refreshToken)) {\n        clearInterval(intervalRefresh)\n        console.log(\"Refresh Token Set:\", refreshToken)\n      }\n    }, 1000)\n\n    return () => {\n      clearInterval(intervalAccess)\n      clearInterval(intervalRefresh)\n    }\n  }, [authCode, refreshToken])\n\n  return (\n    <div className=\"center-container\">\n      {authCode && refreshToken ? (\n        <MainController authCode={authCode} refreshToken={refreshToken} />\n      ) : (\n        <div className=\"center-container-app\">\n          <div className=\"loading-container-app\">\n            <img\n              className=\"loading-spinner\"\n              src={LoadingImage}\n              alt=\"Loading...\"\n            />\n            <p>Verifying Box Credentials...</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}