{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function DateSelector(_ref){let{setSelectedDate}=_ref;const[internalDate,setInternalDate]=useState(\"\");// Convert date to \"YYYY-MM-DD\" format for the input\nconst formatDateForInput=date=>{if(!date)return\"\";const[year,month,day]=[date.getFullYear(),date.getMonth()+1,date.getDate()];return\"\".concat(year,\"-\").concat(String(month).padStart(2,\"0\"),\"-\").concat(String(day).padStart(2,\"0\"));};// Convert date to \"DEC / 15 / 2023\" format in UTC\nconst formatDateForDisplay=date=>{if(!date)return\"\";const monthNames=[\"JAN\",\"FEB\",\"MAR\",\"APR\",\"MAY\",\"JUN\",\"JUL\",\"AUG\",\"SEP\",\"OCT\",\"NOV\",\"DEC\"];const year=date.getUTCFullYear();const month=monthNames[date.getUTCMonth()];const day=date.getUTCDate().toString().padStart(2,\"0\");return\"\".concat(month,\" / \").concat(day,\" / \").concat(year);};// Handle changes to the date input\nconst handleChange=event=>{const dateValue=event.target.value;setInternalDate(dateValue);// Adjust the date creation to treat the input as a UTC date\nconst[year,month,day]=dateValue.split(\"-\").map(num=>parseInt(num,10));const newDate=new Date(Date.UTC(year,month-1,day));// Months are 0-indexed in JavaScript Date\nsetSelectedDate(formatDateForDisplay(newDate));};// Initialize with today's date\nuseEffect(()=>{const today=new Date();setInternalDate(formatDateForInput(today));setSelectedDate(formatDateForDisplay(today));},[]);// Empty dependency array to run only once on mount\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"date-selector-container\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"date-selector\",className:\"input-label\",children:\"Select a Date:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",id:\"date-selector\",className:\"date-input\",value:internalDate,onChange:handleChange})]});}export default DateSelector;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","DateSelector","_ref","setSelectedDate","internalDate","setInternalDate","formatDateForInput","date","year","month","day","getFullYear","getMonth","getDate","concat","String","padStart","formatDateForDisplay","monthNames","getUTCFullYear","getUTCMonth","getUTCDate","toString","handleChange","event","dateValue","target","value","split","map","num","parseInt","newDate","Date","UTC","today","className","children","htmlFor","type","id","onChange"],"sources":["/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool/frontend-dev/src/Components/DateSelector.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nfunction DateSelector({ setSelectedDate }) {\n  const [internalDate, setInternalDate] = useState(\"\")\n\n  // Convert date to \"YYYY-MM-DD\" format for the input\n  const formatDateForInput = (date) => {\n    if (!date) return \"\"\n    const [year, month, day] = [\n      date.getFullYear(),\n      date.getMonth() + 1,\n      date.getDate(),\n    ]\n    return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(\n      2,\n      \"0\"\n    )}`\n  }\n\n  // Convert date to \"DEC / 15 / 2023\" format in UTC\n  const formatDateForDisplay = (date) => {\n    if (!date) return \"\"\n    const monthNames = [\n      \"JAN\",\n      \"FEB\",\n      \"MAR\",\n      \"APR\",\n      \"MAY\",\n      \"JUN\",\n      \"JUL\",\n      \"AUG\",\n      \"SEP\",\n      \"OCT\",\n      \"NOV\",\n      \"DEC\",\n    ]\n    const year = date.getUTCFullYear()\n    const month = monthNames[date.getUTCMonth()]\n    const day = date.getUTCDate().toString().padStart(2, \"0\")\n    return `${month} / ${day} / ${year}`\n  }\n\n  // Handle changes to the date input\n  const handleChange = (event) => {\n    const dateValue = event.target.value\n    setInternalDate(dateValue)\n\n    // Adjust the date creation to treat the input as a UTC date\n    const [year, month, day] = dateValue\n      .split(\"-\")\n      .map((num) => parseInt(num, 10))\n    const newDate = new Date(Date.UTC(year, month - 1, day)) // Months are 0-indexed in JavaScript Date\n\n    setSelectedDate(formatDateForDisplay(newDate))\n  }\n\n  // Initialize with today's date\n  useEffect(() => {\n    const today = new Date()\n    setInternalDate(formatDateForInput(today))\n    setSelectedDate(formatDateForDisplay(today))\n  }, []) // Empty dependency array to run only once on mount\n\n  return (\n    <div className=\"date-selector-container\">\n      <label htmlFor=\"date-selector\" className=\"input-label\">\n        Select a Date:\n      </label>\n      <input\n        type=\"date\"\n        id=\"date-selector\"\n        className=\"date-input\"\n        value={internalDate}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nexport default DateSelector\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}