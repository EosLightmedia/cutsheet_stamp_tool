{"ast":null,"code":"var _jsxFileName = \"/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool_dev/frontend-dev/src/Components/DateSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DateSelector({\n  selectedDate,\n  setSelectedDate\n}) {\n  _s();\n  // State for the internal date format used by the input\n  const [internalDate, setInternalDate] = useState(\"\");\n\n  // Convert date to \"YYYY-MM-DD\" format for the input\n  const formatDateForInput = date => {\n    if (!date) return \"\";\n    const [year, month, day] = [date.getFullYear(), date.getMonth() + 1, date.getDate()];\n    return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(2, \"0\")}`;\n  };\n\n  // Update internal date when selectedDate changes\n  useEffect(() => {\n    if (selectedDate) {\n      setInternalDate(formatDateForInput(selectedDate));\n    }\n  }, [selectedDate]);\n\n  // Handle changes to the date input\n  const handleChange = event => {\n    const newDate = new Date(event.target.value);\n    setSelectedDate(newDate);\n  };\n\n  // Set today's date as default if selectedDate is not provided\n  useEffect(() => {\n    if (!selectedDate) {\n      const today = new Date();\n      setSelectedDate(today);\n    }\n  }, [selectedDate, setSelectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"date-selector-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"date-selector\",\n      className: \"input-label\",\n      children: \"Select a Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      id: \"date-selector\",\n      className: \"date-input\",\n      value: internalDate,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(DateSelector, \"3jkOyQui3sXLs4pPgag3p2bAXvM=\");\n_c = DateSelector;\nexport default DateSelector;\nvar _c;\n$RefreshReg$(_c, \"DateSelector\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DateSelector","selectedDate","setSelectedDate","_s","internalDate","setInternalDate","formatDateForInput","date","year","month","day","getFullYear","getMonth","getDate","String","padStart","handleChange","event","newDate","Date","target","value","today","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","_c","$RefreshReg$"],"sources":["/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool_dev/frontend-dev/src/Components/DateSelector.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nfunction DateSelector({ selectedDate, setSelectedDate }) {\n  // State for the internal date format used by the input\n  const [internalDate, setInternalDate] = useState(\"\")\n\n  // Convert date to \"YYYY-MM-DD\" format for the input\n  const formatDateForInput = (date) => {\n    if (!date) return \"\"\n    const [year, month, day] = [\n      date.getFullYear(),\n      date.getMonth() + 1,\n      date.getDate(),\n    ]\n    return `${year}-${String(month).padStart(2, \"0\")}-${String(day).padStart(\n      2,\n      \"0\"\n    )}`\n  }\n\n  // Update internal date when selectedDate changes\n  useEffect(() => {\n    if (selectedDate) {\n      setInternalDate(formatDateForInput(selectedDate))\n    }\n  }, [selectedDate])\n\n  // Handle changes to the date input\n  const handleChange = (event) => {\n    const newDate = new Date(event.target.value)\n    setSelectedDate(newDate)\n  }\n\n  // Set today's date as default if selectedDate is not provided\n  useEffect(() => {\n    if (!selectedDate) {\n      const today = new Date()\n      setSelectedDate(today)\n    }\n  }, [selectedDate, setSelectedDate])\n\n  return (\n    <div className=\"date-selector-container\">\n      <label htmlFor=\"date-selector\" className=\"input-label\">\n        Select a Date:\n      </label>\n      <input\n        type=\"date\"\n        id=\"date-selector\"\n        className=\"date-input\"\n        value={internalDate}\n        onChange={handleChange}\n      />\n    </div>\n  )\n}\n\nexport default DateSelector\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,YAAYA,CAAC;EAAEC,YAAY;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACvD;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMU,kBAAkB,GAAIC,IAAI,IAAK;IACnC,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;IACpB,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,GAAG,CACzBH,IAAI,CAACI,WAAW,CAAC,CAAC,EAClBJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EACnBL,IAAI,CAACM,OAAO,CAAC,CAAC,CACf;IACD,OAAQ,GAAEL,IAAK,IAAGM,MAAM,CAACL,KAAK,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGD,MAAM,CAACJ,GAAG,CAAC,CAACK,QAAQ,CACtE,CAAC,EACD,GACF,CAAE,EAAC;EACL,CAAC;;EAED;EACAlB,SAAS,CAAC,MAAM;IACd,IAAII,YAAY,EAAE;MAChBI,eAAe,CAACC,kBAAkB,CAACL,YAAY,CAAC,CAAC;IACnD;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMe,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMC,OAAO,GAAG,IAAIC,IAAI,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC;IAC5CnB,eAAe,CAACgB,OAAO,CAAC;EAC1B,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACd,IAAI,CAACI,YAAY,EAAE;MACjB,MAAMqB,KAAK,GAAG,IAAIH,IAAI,CAAC,CAAC;MACxBjB,eAAe,CAACoB,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACrB,YAAY,EAAEC,eAAe,CAAC,CAAC;EAEnC,oBACEH,OAAA;IAAKwB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCzB,OAAA;MAAO0B,OAAO,EAAC,eAAe;MAACF,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAEvD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR9B,OAAA;MACE+B,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,eAAe;MAClBR,SAAS,EAAC,YAAY;MACtBF,KAAK,EAAEjB,YAAa;MACpB4B,QAAQ,EAAEhB;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC1B,EAAA,CArDQH,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAuDrB,eAAeA,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}