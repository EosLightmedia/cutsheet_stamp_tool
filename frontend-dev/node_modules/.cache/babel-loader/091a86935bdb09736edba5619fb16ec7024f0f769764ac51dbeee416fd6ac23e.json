{"ast":null,"code":"var _jsxFileName = \"/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool/frontend-dev/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport MainController from \"./Components/MainController\";\nimport LoadingImage from \"./Assets/loading-spinner.gif\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [authCode, setAuthCode] = useState(\"\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const cookieName = \"auth_code\";\n      const value = `; ${document.cookie}`;\n      const parts = value.split(`; ${cookieName}=`);\n      if (parts.length === 2) {\n        const code = parts.pop().split(\";\").shift();\n        if (code !== authCode) {\n          setAuthCode(code);\n          clearInterval(interval); // Stop checking once the code is found\n        }\n      }\n    }, 1000); // Check every 1000 milliseconds (1 second)\n\n    return () => clearInterval(interval); // Clean up the interval on unmount\n  }, [authCode]);\n  useEffect(() => {\n    if (authCode) {\n      console.log(\"Auth Code:\", authCode);\n    }\n  }, [authCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: authCode ? /*#__PURE__*/_jsxDEV(MainController, {\n      authCode: authCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"loading-spinner\",\n        src: LoadingImage,\n        alt: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Verifying Box Credentials...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vut4CqJ4VyxK7J492vX6bdGpBX0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","MainController","LoadingImage","jsxDEV","_jsxDEV","App","_s","authCode","setAuthCode","interval","setInterval","cookieName","value","document","cookie","parts","split","length","code","pop","shift","clearInterval","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["/Users/stevengraves/EosDev/EosApps/cutsheet_stamp_tool/frontend-dev/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport MainController from \"./Components/MainController\"\nimport LoadingImage from \"./Assets/loading-spinner.gif\"\nimport \"./App.css\"\n\nfunction App() {\n  const [authCode, setAuthCode] = useState(\"\")\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const cookieName = \"auth_code\"\n      const value = `; ${document.cookie}`\n      const parts = value.split(`; ${cookieName}=`)\n      if (parts.length === 2) {\n        const code = parts.pop().split(\";\").shift()\n        if (code !== authCode) {\n          setAuthCode(code)\n          clearInterval(interval) // Stop checking once the code is found\n        }\n      }\n    }, 1000) // Check every 1000 milliseconds (1 second)\n\n    return () => clearInterval(interval) // Clean up the interval on unmount\n  }, [authCode])\n\n  useEffect(() => {\n    if (authCode) {\n      console.log(\"Auth Code:\", authCode)\n    }\n  }, [authCode])\n\n  return (\n    <div className=\"center-container\">\n      {authCode ? (\n        <MainController authCode={authCode} />\n      ) : (\n        <div className=\"loading-container-app\">\n          <img\n            className=\"loading-spinner\"\n            src={LoadingImage}\n            alt=\"Loading...\"\n          />\n          <p>Verifying Box Credentials...</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AACxD,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMU,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,UAAU,GAAG,WAAW;MAC9B,MAAMC,KAAK,GAAI,KAAIC,QAAQ,CAACC,MAAO,EAAC;MACpC,MAAMC,KAAK,GAAGH,KAAK,CAACI,KAAK,CAAE,KAAIL,UAAW,GAAE,CAAC;MAC7C,IAAII,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;QACtB,MAAMC,IAAI,GAAGH,KAAK,CAACI,GAAG,CAAC,CAAC,CAACH,KAAK,CAAC,GAAG,CAAC,CAACI,KAAK,CAAC,CAAC;QAC3C,IAAIF,IAAI,KAAKX,QAAQ,EAAE;UACrBC,WAAW,CAACU,IAAI,CAAC;UACjBG,aAAa,CAACZ,QAAQ,CAAC,EAAC;QAC1B;MACF;IACF,CAAC,EAAE,IAAI,CAAC,EAAC;;IAET,OAAO,MAAMY,aAAa,CAACZ,QAAQ,CAAC,EAAC;EACvC,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;EAEdR,SAAS,CAAC,MAAM;IACd,IAAIQ,QAAQ,EAAE;MACZe,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEhB,QAAQ,CAAC;IACrC;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAKoB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,EAC9BlB,QAAQ,gBACPH,OAAA,CAACH,cAAc;MAACM,QAAQ,EAAEA;IAAS;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEtCzB,OAAA;MAAKoB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCrB,OAAA;QACEoB,SAAS,EAAC,iBAAiB;QAC3BM,GAAG,EAAE5B,YAAa;QAClB6B,GAAG,EAAC;MAAY;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eACFzB,OAAA;QAAAqB,QAAA,EAAG;MAA4B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CA1CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AA4CZ,eAAeA,GAAG;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}