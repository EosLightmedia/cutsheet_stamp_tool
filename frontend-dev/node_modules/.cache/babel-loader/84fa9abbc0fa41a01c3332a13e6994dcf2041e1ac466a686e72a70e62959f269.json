{"ast":null,"code":"var _jsxFileName = \"/Users/stevengraves/EosDev/EosApps/stamper-new-frontend/src/Components/BoxFolderSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BoxFolderSelector({\n  boxFolder,\n  setBoxFolder\n}) {\n  _s();\n  const defaultHelperText = \"Copy and paste the Box folder link (e.g., https://box.com/folder/12345)\";\n  const [helperText, setHelperText] = useState(defaultHelperText);\n  const validateBoxFolderLink = inputUrl => {\n    // Update the state with the new input value\n    setBoxFolder(inputUrl);\n    if (inputUrl === \"\") {\n      setHelperText(defaultHelperText);\n      return;\n    }\n\n    // Regex to match the expected Box URL format\n    const isValidFormat = /^https:\\/\\/box\\.com\\/folder\\/\\d+$/.test(inputUrl);\n    if (isValidFormat) {\n      setHelperText(\"Box link looks good\");\n    } else {\n      setHelperText(\"Whoops, something about that link doesn’t look right.\");\n    }\n  };\n  const handleChange = event => {\n    const inputUrl = event.target.value;\n    validateBoxFolderLink(inputUrl);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"box-folder-url\",\n      children: \"Box Folder URL:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"box-folder-url\",\n      value: boxFolder,\n      onChange: handleChange,\n      placeholder: \"https://box.com/folder/12345\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: helperText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(BoxFolderSelector, \"8KAc+bovd8x8f06VSSDsfQUcQJQ=\");\n_c = BoxFolderSelector;\nexport default BoxFolderSelector;\nvar _c;\n$RefreshReg$(_c, \"BoxFolderSelector\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","BoxFolderSelector","boxFolder","setBoxFolder","_s","defaultHelperText","helperText","setHelperText","validateBoxFolderLink","inputUrl","isValidFormat","test","handleChange","event","target","value","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/stevengraves/EosDev/EosApps/stamper-new-frontend/src/Components/BoxFolderSelector.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction BoxFolderSelector({ boxFolder, setBoxFolder }) {\n  const defaultHelperText =\n    \"Copy and paste the Box folder link (e.g., https://box.com/folder/12345)\";\n  const [helperText, setHelperText] = useState(defaultHelperText);\n\n  const validateBoxFolderLink = (inputUrl) => {\n    // Update the state with the new input value\n    setBoxFolder(inputUrl);\n\n    if (inputUrl === \"\") {\n      setHelperText(defaultHelperText);\n      return;\n    }\n\n    // Regex to match the expected Box URL format\n    const isValidFormat = /^https:\\/\\/box\\.com\\/folder\\/\\d+$/.test(inputUrl);\n    if (isValidFormat) {\n      setHelperText(\"Box link looks good\");\n    } else {\n      setHelperText(\"Whoops, something about that link doesn’t look right.\");\n    }\n  };\n\n  const handleChange = (event) => {\n    const inputUrl = event.target.value;\n    validateBoxFolderLink(inputUrl);\n  };\n\n  return (\n    <div>\n      <label htmlFor=\"box-folder-url\">Box Folder URL:</label>\n      <input\n        type=\"text\"\n        id=\"box-folder-url\"\n        value={boxFolder}\n        onChange={handleChange}\n        placeholder=\"https://box.com/folder/12345\"\n      />\n      <p>{helperText}</p>\n    </div>\n  );\n}\n\nexport default BoxFolderSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,iBAAiBA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EACtD,MAAMC,iBAAiB,GACrB,yEAAyE;EAC3E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAACO,iBAAiB,CAAC;EAE/D,MAAMG,qBAAqB,GAAIC,QAAQ,IAAK;IAC1C;IACAN,YAAY,CAACM,QAAQ,CAAC;IAEtB,IAAIA,QAAQ,KAAK,EAAE,EAAE;MACnBF,aAAa,CAACF,iBAAiB,CAAC;MAChC;IACF;;IAEA;IACA,MAAMK,aAAa,GAAG,mCAAmC,CAACC,IAAI,CAACF,QAAQ,CAAC;IACxE,IAAIC,aAAa,EAAE;MACjBH,aAAa,CAAC,qBAAqB,CAAC;IACtC,CAAC,MAAM;MACLA,aAAa,CAAC,uDAAuD,CAAC;IACxE;EACF,CAAC;EAED,MAAMK,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAMJ,QAAQ,GAAGI,KAAK,CAACC,MAAM,CAACC,KAAK;IACnCP,qBAAqB,CAACC,QAAQ,CAAC;EACjC,CAAC;EAED,oBACET,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAOiB,OAAO,EAAC,gBAAgB;MAAAD,QAAA,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACvDrB,OAAA;MACEsB,IAAI,EAAC,MAAM;MACXC,EAAE,EAAC,gBAAgB;MACnBR,KAAK,EAAEb,SAAU;MACjBsB,QAAQ,EAAEZ,YAAa;MACvBa,WAAW,EAAC;IAA8B;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFrB,OAAA;MAAAgB,QAAA,EAAIV;IAAU;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV;AAACjB,EAAA,CAzCQH,iBAAiB;AAAAyB,EAAA,GAAjBzB,iBAAiB;AA2C1B,eAAeA,iBAAiB;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}